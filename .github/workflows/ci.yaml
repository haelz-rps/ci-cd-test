name: CI - Connectors Tests

on: 
  push:
    paths:
      - connectors/**
  # pull_request:
  #   paths:
  #     - connectors/**

jobs:
  Unit-Test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-type: [unit_tests, integration]
    name: Connectors Tests
    steps:
      - name: Setup Git
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get list of changed files
        id: changes
        run: |
          git diff --name-only HEAD^ HEAD -- ./connectors/ > changed_files.txt
          dir=$(awk -F'/' '{print $2}' changed_files.txt | sort | uniq)
          echo "dir=$dir" >> "$GITHUB_ENV"

      - name: Create Secret File
        id: secret_file
        run: |
          echo "${{ env.dir }}"
          cat <<EOF>>secrets/secrets.json
          ${{ secrets.SECRET_FILE }}
          EOF
        working-directory: ./connectors/${{ env.dir }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install poetry
        run: pipx install poetry pytest

      - name: Poetry Install Dependencies
        run: poetry install
        working-directory: ./connectors/${{ env.dir }}

      - name: Check Docker Compose file
        id: check_file
        run: |
          if [ -e "docker-compose.yaml" ]; then
            echo "check_result=true" >> $GITHUB_OUTPUT
          else
            echo "check_result=false" >> $GITHUB_OUTPUT
          fi
        working-directory: ./connectors/${{ env.dir }}
        continue-on-error: true

      - name: Run docker-compose
        if: steps.check_file.outputs.check_result == 'true'
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          compose-file: "./connectors/${{ env.dir }}/docker-compose.yaml"

      - name: Run tests ${{matrix.test-type}}
        run: |
          if [ "${{matrix.test-type}}" == "unit_tests" ]; then
            poetry run pytest --html=report-unit_tests.html unit_tests
          elif [ "${{matrix.test-type}}" == "integration" ]; then
            poetry run pytest --html=report-integration.html integration_tests
          fi
        working-directory: ./connectors/${{ env.dir }}

      - name: Upload unit test report
        if: matrix.test-type == 'unit_tests'
        uses: actions/upload-artifact@v4
        with:
          path: ./connectors/${{env.dir}}/*.html
      # - name: Upload unit test report
      #   if: matrix.test-type == 'unit_tests'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: report-unit_tests.html
      #     path: ./connectors/${{env.dir}}/report-unit_tests.html

      # - name: Upload integration test report
      #   if: matrix.test-type == 'integration'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: report-integration_tests.html
      #     path: ./connectors/${{env.dir}}/report-integration.html